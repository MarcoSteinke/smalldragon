use Base.dg

/*
	Subroutines provided:

	sign(i)
	pow(i,n)
	faculty(n)
	min(i1,i2)
	max(i1,i2)
	gcd(i1,i2) //greatest common divisor
	lcm(i1,i2) //least common multiple
*/

public namespace Math{
	
	public (Integer n)->Integer sign{
		if(n>0){
			return 1;
		}
		if(n==0){
			return 0;
		}
		return -1;
	}
	
	public (Integer base,PInt power)->Integer pow{
		Integer result=1;
		i=0;
		while(i<power){
			result=result*base;
			i=i+1;
		}
		return result;
	}
	
	public (PInt n)->PInt faculty{
		if(n<=1){ return 1; }
		return (n*faculty(n-1));
	}
	
	public (Integer a,Integer b)->Integer max{
		if(a>b){return a;}
		return b;
	}
	
	public (Integer a,Integer b)->Integer min{
		if(a<b){return a;}
		return b;
	}

	public (Integer a, Integer b)->Integer gcd{
		if(a==0){return b;}
		return gcd(b%a,a);
	}

	public(Integer a, Integer b)->Integer lcm{

		return (a*b)/gcd(a,b);
	}
}
