
struct Simple {
	((uint) -> uint)  member;
}

fn main ()~> uint {

	printf("%d\n",subr(id));
	printf("%d\n",subr(twice));

	((uint) -> uint) myfunction = id;

	myfunction(3);

	Simple s = newSimple();

	s.member = myfunction;

	delSimple(s);

	return 0;
}

fn id (uint n)->uint {
	return n;
}

fn twice (uint n)-> uint {return 2*n;}

fn subr (((uint)->uint) subr1)->uint {
	return subr1(2);
}

