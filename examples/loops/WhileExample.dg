fn main ()~>PInt {

	PInt res = sqrt_dg(9);
}

fn div(PInt x, PInt y)~>PInt { // x / y

	PInt counter = 0;
	
	while(x > 0) {
	
		x = x - y;
		counter = counter + 1;
	}
	
	return counter;
}

fn mul(PInt x, PInt y)~>PInt { // x * y

	PInt res = 0;

	while(y != 0) {
	
		res = res + x;
		y = y - 1;
	}
	
	return res;
}

fn sqrt_dg(PInt x)~>PInt {

	PInt left = 0;
	PInt right = x;

	if(x < 2){
		return x;
	}
	
	while(left < right){
	
		PInt mid = left + div(right - left, 2);

		if(mid * mid == x){
		
			return mid;

		} else { 
		
			if(mul(mid, mid) < x) {
			
				left = mid + 1;
				
			} else {
			
				right = mid;
			}	
		}
	}
	
	return left - 1;
}
