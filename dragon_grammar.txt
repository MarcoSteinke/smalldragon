
//this file defines the grammar for the dragon language.
//the language can be written with indentation, or with curly braces,
//depending on your preferences. before lexing, if there is indentation, it is replaced with curly braces
//so everything after that brace-weaving recognizes only the curly braces variation

//TODO

int ::= ... | -1 | 0 | 1 | 2 | ...

char ::= 'a' | ... | 'z' | 'A' | ... | 'Z'

alphanumeric ::= int | char

identifier ::= char alphanumeric*

string ::= '"' alphanumeric* '"'

accessmodifier ::= public | private

class ::= accessmodifier class identifier '{' classField* method* '}'

classField ::= Type identifier ';'

Type ::= identifier

methodName ::= identifier

method ::= accessmodifier returnType methodName '(' argument* ')' '{' statement* '}'

//alternative, haskell-like version
method ::= accessmodifier methodName '::' (Type smallarrow)* Type '{' statement* '}'

smallarrow ::= '->'

returnType ::= 'void' | Type

argument ::= Type identifier

//TODO
statement ::=