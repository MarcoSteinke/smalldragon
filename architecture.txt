This file documents the Software Architecture of Dragon

-------------------------------------------------------------------

SmallDragon has 3 Components:
___________________________________________________________________
|- dragon-lexer : a lexer which produces .tokens files.
|  it is written in C because the project is simple and C offers
|  great performance.
|
|- dragon-parser : a parser which reads .tokens files 
|  and produces an AST
|  in a .json file. It is written in C++.
|  
|- dragon : a compiler which reads multiple .json AST's and produces
|  .java files. It is written in Java. Java is not the
|  ideal choice here, but a rewrite would take too much time.
|___________________________________________________________________


The division into multiple components is so that they can be reused
by others. This also enables the Dragon to take advantages of 
multiple languages and follows the Unix philosophy of having a program
do one thing.

For example, the lexer can be used independently 
to create syntax highlighting. The .json representation provided 
by the parser can be used to help an IDE generate good Autocomplete and
show useful syntax errors.
